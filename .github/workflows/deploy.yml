name: Deploy WhatsAppni Bot

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE_NAME: whatsappnibot
  PROJECT_DIR: /home/whatsappni
  REPO_URL: https://github.com/nasimlat/whatsappni.git

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_timeout: 600
          envs: DOCKER_IMAGE_NAME,PROJECT_DIR,REPO_URL,BOT_TOKEN,TELEGRAM_BOT_TOKEN
          script: |
            #!/bin/bash
            set -euo pipefail  # –°—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            
            echo "=== –ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è ==="
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            required_vars=(DOCKER_IMAGE_NAME PROJECT_DIR REPO_URL BOT_TOKEN TELEGRAM_BOT_TOKEN)
            for var in "${required_vars[@]}"; do
              if [ -z "${!var:-}" ]; then
                echo "‚ùå –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
                exit 1
              fi
            done
            
            # –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
            cleanup_containers() {
              echo "üîé –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –∏–º–µ–Ω–µ–º: $DOCKER_IMAGE_NAME"
              if docker ps -aq --filter "name=$DOCKER_IMAGE_NAME" | grep -q .; then
                echo "üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                docker stop "$DOCKER_IMAGE_NAME" >/dev/null 2>&1 || true
                docker rm -f "$DOCKER_IMAGE_NAME" >/dev/null 2>&1 || true
                echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–¥–∞–ª—ë–Ω"
              else
                echo "‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
              fi
            }
            
            # –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            prepare_directory() {
              echo "üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PROJECT_DIR"
              sudo mkdir -p "$PROJECT_DIR"
              sudo chown -R $USER "$PROJECT_DIR"
              cd "$PROJECT_DIR" || { echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ $PROJECT_DIR"; exit 1; }
            }
            
            # –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            update_repository() {
              echo "üåê –†–∞–±–æ—Ç–∞ —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º: $REPO_URL"
              
              if [ ! -d ".git" ]; then
                echo "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
                git init -q
                git remote add origin "$REPO_URL" || true
              fi
              
              echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ origin/$GITHUB_REF_NAME..."
              git fetch --depth=1 origin "$GITHUB_REF_NAME"
              git checkout -B "$GITHUB_REF_NAME" FETCH_HEAD --force
              git reset --hard origin/"$GITHUB_REF_NAME"
              echo "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª—ë–Ω"
            }
            
            # –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ Docker
            deploy_docker() {
              echo "üê≥ –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞ ($DOCKER_IMAGE_NAME)..."
              docker build -t "$DOCKER_IMAGE_NAME" .
              
              echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
              docker run -d \
                --name "$DOCKER_IMAGE_NAME" \
                --restart unless-stopped \
                -e BOT_TOKEN="$BOT_TOKEN" \
                -e TELEGRAM_BOT_TOKEN="$TELEGRAM_BOT_TOKEN" \
                "$DOCKER_IMAGE_NAME"
                
              echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
            }
            
            # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
            cleanup_containers
            prepare_directory
            update_repository
            deploy_docker
            
            echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
            docker ps --filter "name=$DOCKER_IMAGE_NAME"